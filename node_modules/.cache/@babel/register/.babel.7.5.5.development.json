{
  "{\"sourceRoot\":\"/home/pascal/coding/news-fetcher-backend\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/pascal/coding/news-fetcher-backend\",\"filename\":\"/home/pascal/coding/news-fetcher-backend/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/pascal/coding/news-fetcher-backend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/pascal/coding/news-fetcher-backend",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/pascal/coding/news-fetcher-backend",
      "filename": "/home/pascal/coding/news-fetcher-backend/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/pascal/coding/news-fetcher-backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/pascal/coding/news-fetcher-backend/index.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/pascal/coding/news-fetcher-backend/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/pascal/coding/news-fetcher-backend",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar _axios = _interopRequireDefault(require(\"axios\"));\n\nvar _cheerio = _interopRequireDefault(require(\"cheerio\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar app = (0, _express[\"default\"])();\nvar PORT = 5001;\nvar corsOptions = {\n  origin: \"*\",\n  credentials: true // <-- REQUIRED backend setting\n\n};\napp.use((0, _cors[\"default\"])(corsOptions));\napp.use(_bodyParser[\"default\"].json());\napp.get(\"/\", function (_req, res) {\n  res.send(\"Hello World\");\n});\napp.post(\"/get-news\",\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(_req, res) {\n    var _ref2, data, $, articles, filteredArticles;\n\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return (0, _axios[\"default\"])({\n              method: \"GET\",\n              url: \"https://zeit.de/index\"\n            });\n\n          case 3:\n            _ref2 = _context.sent;\n            data = _ref2.data;\n            $ = _cheerio[\"default\"].load(data);\n            articles = [];\n            $(\"article\").children(\"a\").each(function (i, article) {\n              var picture = $(article).find($(\"figure img\")).attr(\"src\");\n\n              if (!picture && $(article).children(\"figure\").children(\"div\").children(\"noscript\")[0]) {\n                var _data = $(article).find(\"noscript\");\n\n                _data.each(function (i, el) {\n                  el.children.forEach(function (child) {\n                    var links = child.data.split('src=\"');\n                    picture = links[1].substring(0, links[1].search('\"'));\n                  });\n                });\n              }\n\n              articles.push({\n                title: article.attribs.title,\n                link: article.attribs.href,\n                picture: picture,\n                description: $(article).find($(\"p\")).text()\n              });\n            });\n            filteredArticles = articles.filter(function (article) {\n              return article.title;\n            });\n            res.send({\n              articles: filteredArticles\n            });\n            _context.next = 16;\n            break;\n\n          case 12:\n            _context.prev = 12;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(\"\\x1b[1m%s\\x1b[0m\", _context.t0);\n            res.status(501);\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 12]]);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}());\napp.listen(PORT, function () {\n  return console.log(\"App is running on Port \".concat(PORT));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImFwcCIsIlBPUlQiLCJjb3JzT3B0aW9ucyIsIm9yaWdpbiIsImNyZWRlbnRpYWxzIiwidXNlIiwiYm9keVBhcnNlciIsImpzb24iLCJnZXQiLCJfcmVxIiwicmVzIiwic2VuZCIsInBvc3QiLCJtZXRob2QiLCJ1cmwiLCJkYXRhIiwiJCIsImNoZWVyaW8iLCJsb2FkIiwiYXJ0aWNsZXMiLCJjaGlsZHJlbiIsImVhY2giLCJpIiwiYXJ0aWNsZSIsInBpY3R1cmUiLCJmaW5kIiwiYXR0ciIsImVsIiwiZm9yRWFjaCIsImNoaWxkIiwibGlua3MiLCJzcGxpdCIsInN1YnN0cmluZyIsInNlYXJjaCIsInB1c2giLCJ0aXRsZSIsImF0dHJpYnMiLCJsaW5rIiwiaHJlZiIsImRlc2NyaXB0aW9uIiwidGV4dCIsImZpbHRlcmVkQXJ0aWNsZXMiLCJmaWx0ZXIiLCJjb25zb2xlIiwibG9nIiwic3RhdHVzIiwibGlzdGVuIl0sIm1hcHBpbmdzIjoiOztBQUFBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOzs7Ozs7OztBQUVBLElBQU1BLEdBQUcsR0FBRywwQkFBWjtBQUNBLElBQU1DLElBQUksR0FBRyxJQUFiO0FBRUEsSUFBTUMsV0FBVyxHQUFHO0FBQ2xCQyxFQUFBQSxNQUFNLEVBQUUsR0FEVTtBQUVsQkMsRUFBQUEsV0FBVyxFQUFFLElBRkssQ0FFQTs7QUFGQSxDQUFwQjtBQUtBSixHQUFHLENBQUNLLEdBQUosQ0FBUSxzQkFBS0gsV0FBTCxDQUFSO0FBQ0FGLEdBQUcsQ0FBQ0ssR0FBSixDQUFRQyx1QkFBV0MsSUFBWCxFQUFSO0FBRUFQLEdBQUcsQ0FBQ1EsR0FBSixDQUFRLEdBQVIsRUFBYSxVQUFDQyxJQUFELEVBQU9DLEdBQVAsRUFBZTtBQUMxQkEsRUFBQUEsR0FBRyxDQUFDQyxJQUFKLENBQVMsYUFBVDtBQUNELENBRkQ7QUFJQVgsR0FBRyxDQUFDWSxJQUFKLENBQVMsV0FBVDtBQUFBO0FBQUE7QUFBQTtBQUFBO0FB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ZGluZy9uZXdzLWZldGNoZXItYmFja2VuZCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzIGZyb20gXCJleHByZXNzXCI7XG5pbXBvcnQgYm9keVBhcnNlciBmcm9tIFwiYm9keS1wYXJzZXJcIjtcbmltcG9ydCBjb3JzIGZyb20gXCJjb3JzXCI7XG5pbXBvcnQgYXhpb3MgZnJvbSBcImF4aW9zXCI7XG5pbXBvcnQgY2hlZXJpbyBmcm9tIFwiY2hlZXJpb1wiO1xuXG5jb25zdCBhcHAgPSBleHByZXNzKCk7XG5jb25zdCBQT1JUID0gNTAwMTtcblxuY29uc3QgY29yc09wdGlvbnMgPSB7XG4gIG9yaWdpbjogXCIqXCIsXG4gIGNyZWRlbnRpYWxzOiB0cnVlIC8vIDwtLSBSRVFVSVJFRCBiYWNrZW5kIHNldHRpbmdcbn07XG5cbmFwcC51c2UoY29ycyhjb3JzT3B0aW9ucykpO1xuYXBwLnVzZShib2R5UGFyc2VyLmpzb24oKSk7XG5cbmFwcC5nZXQoXCIvXCIsIChfcmVxLCByZXMpID0+IHtcbiAgcmVzLnNlbmQoXCJIZWxsbyBXb3JsZFwiKTtcbn0pO1xuXG5hcHAucG9zdChcIi9nZXQtbmV3c1wiLCBhc3luYyAoX3JlcSwgcmVzKSA9PiB7XG4gIHRyeSB7XG4gICAgY29uc3QgeyBkYXRhIH0gPSBhd2FpdCBheGlvcyh7XG4gICAgICBtZXRob2Q6IFwiR0VUXCIsXG4gICAgICB1cmw6IFwiaHR0cHM6Ly96ZWl0LmRlL2luZGV4XCJcbiAgICB9KTtcblxuICAgIGNvbnN0ICQgPSBjaGVlcmlvLmxvYWQoZGF0YSk7XG4gICAgY29uc3QgYXJ0aWNsZXMgPSBbXTtcbiAgICAkKFwiYXJ0aWNsZVwiKVxuICAgICAgLmNoaWxkcmVuKFwiYVwiKVxuICAgICAgLmVhY2goKGksIGFydGljbGUpID0+IHtcbiAgICAgICAgbGV0IHBpY3R1cmUgPSAkKGFydGljbGUpXG4gICAgICAgICAgLmZpbmQoJChcImZpZ3VyZSBpbWdcIikpXG4gICAgICAgICAgLmF0dHIoXCJzcmNcIik7XG5cbiAgICAgICAgaWYgKFxuICAgICAgICAgICFwaWN0dXJlICYmXG4gICAgICAgICAgJChhcnRpY2xlKVxuICAgICAgICAgICAgLmNoaWxkcmVuKFwiZmlndXJlXCIpXG4gICAgICAgICAgICAuY2hpbGRyZW4oXCJkaXZcIilcbiAgICAgICAgICAgIC5jaGlsZHJlbihcIm5vc2NyaXB0XCIpWzBdXG4gICAgICAgICkge1xuICAgICAgICAgIGNvbnN0IGRhdGEgPSAkKGFydGljbGUpLmZpbmQoXCJub3NjcmlwdFwiKTtcbiAgICAgICAgICBkYXRhLmVhY2goKGksIGVsKSA9PiB7XG4gICAgICAgICAgICBlbC5jaGlsZHJlbi5mb3JFYWNoKGNoaWxkID0+IHtcbiAgICAgICAgICAgICAgY29uc3QgbGlua3MgPSBjaGlsZC5kYXRhLnNwbGl0KCdzcmM9XCInKTtcbiAgICAgICAgICAgICAgcGljdHVyZSA9IGxpbmtzWzFdLnN1YnN0cmluZygwLCBsaW5rc1sxXS5zZWFyY2goJ1wiJykpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cblxuICAgICAgICBhcnRpY2xlcy5wdXNoKHtcbiAgICAgICAgICB0aXRsZTogYXJ0aWNsZS5hdHRyaWJzLnRpdGxlLFxuICAgICAgICAgIGxpbms6IGFydGljbGUuYXR0cmlicy5ocmVmLFxuICAgICAgICAgIHBpY3R1cmUsXG4gICAgICAgICAgZGVzY3JpcHRpb246ICQoYXJ0aWNsZSlcbiAgICAgICAgICAgIC5maW5kKCQoXCJwXCIpKVxuICAgICAgICAgICAgLnRleHQoKVxuICAgICAgICB9KTtcbiAgICAgIH0pO1xuXG4gICAgY29uc3QgZmlsdGVyZWRBcnRpY2xlcyA9IGFydGljbGVzLmZpbHRlcihhcnRpY2xlID0+IGFydGljbGUudGl0bGUpO1xuXG4gICAgcmVzLnNlbmQoeyBhcnRpY2xlczogZmlsdGVyZWRBcnRpY2xlcyB9KTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmxvZyhcIlxceDFiWzFtJXNcXHgxYlswbVwiLCBlcnJvcik7XG4gICAgcmVzLnN0YXR1cyg1MDEpO1xuICB9XG59KTtcblxuYXBwLmxpc3RlbihQT1JULCAoKSA9PiBjb25zb2xlLmxvZyhgQXBwIGlzIHJ1bm5pbmcgb24gUG9ydCAke1BPUlR9YCkpO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "app",
        "PORT",
        "corsOptions",
        "origin",
        "credentials",
        "use",
        "bodyParser",
        "json",
        "get",
        "_req",
        "res",
        "send",
        "post",
        "method",
        "url",
        "data",
        "$",
        "cheerio",
        "load",
        "articles",
        "children",
        "each",
        "i",
        "article",
        "picture",
        "find",
        "attr",
        "el",
        "forEach",
        "child",
        "links",
        "split",
        "substring",
        "search",
        "push",
        "title",
        "attribs",
        "link",
        "href",
        "description",
        "text",
        "filteredArticles",
        "filter",
        "console",
        "log",
        "status",
        "listen"
      ],
      "mappings": "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",
      "sourceRoot": "/home/pascal/coding/news-fetcher-backend",
      "sourcesContent": [
        "import express from \"express\";\nimport bodyParser from \"body-parser\";\nimport cors from \"cors\";\nimport axios from \"axios\";\nimport cheerio from \"cheerio\";\n\nconst app = express();\nconst PORT = 5001;\n\nconst corsOptions = {\n  origin: \"*\",\n  credentials: true // <-- REQUIRED backend setting\n};\n\napp.use(cors(corsOptions));\napp.use(bodyParser.json());\n\napp.get(\"/\", (_req, res) => {\n  res.send(\"Hello World\");\n});\n\napp.post(\"/get-news\", async (_req, res) => {\n  try {\n    const { data } = await axios({\n      method: \"GET\",\n      url: \"https://zeit.de/index\"\n    });\n\n    const $ = cheerio.load(data);\n    const articles = [];\n    $(\"article\")\n      .children(\"a\")\n      .each((i, article) => {\n        let picture = $(article)\n          .find($(\"figure img\"))\n          .attr(\"src\");\n\n        if (\n          !picture &&\n          $(article)\n            .children(\"figure\")\n            .children(\"div\")\n            .children(\"noscript\")[0]\n        ) {\n          const data = $(article).find(\"noscript\");\n          data.each((i, el) => {\n            el.children.forEach(child => {\n              const links = child.data.split('src=\"');\n              picture = links[1].substring(0, links[1].search('\"'));\n            });\n          });\n        }\n\n        articles.push({\n          title: article.attribs.title,\n          link: article.attribs.href,\n          picture,\n          description: $(article)\n            .find($(\"p\"))\n            .text()\n        });\n      });\n\n    const filteredArticles = articles.filter(article => article.title);\n\n    res.send({ articles: filteredArticles });\n  } catch (error) {\n    console.log(\"\\x1b[1m%s\\x1b[0m\", error);\n    res.status(501);\n  }\n});\n\napp.listen(PORT, () => console.log(`App is running on Port ${PORT}`));\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1567769443677
  }
}